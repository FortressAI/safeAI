{
  "Math_KG": {
    "description": "This Math KG provides a comprehensive suite of dynamic agents for solving advanced mathematics problems. It includes basic arithmetic and algebra operations, calculus, trigonometric functions, symbolic manipulation, and advanced number theory operations. Advanced agents include modular arithmetic, prime factorization, Eulerâ€™s Totient function, Chinese Remainder Theorem (CRT), and Diophantine Equation solvers to enable IMO-level problem solving.",
    "agents": [
      {
        "name": "BaseAgent",
        "description": "Base agent that provides common functionality, metadata extraction, and error handling.",
        "groovyScript": "class BaseAgent {\n    def instruction\n    BaseAgent(graphRag) {\n        if (graphRag) {\n            this.instruction = graphRag.getInstruction(this.getClass().simpleName.replace('Agent',''))\n        }\n    }\n    def metadata() {\n        def methodName = this.getClass().simpleName.replace('Agent','')\n        def cot = \"Applied transformation: \" + methodName\n        if (instruction) { cot += \" Instruction: \" + instruction }\n        return [method: methodName, chain_of_thought: cot, confidence: 0.9]\n    }\n    def generateCandidate(inputExpr) {\n        throw new UnsupportedOperationException('Subclasses must implement generateCandidate')\n    }\n}"
      },
      {
        "name": "AdditionAgent",
        "description": "Performs addition on two numbers.",
        "groovyScript": "class AdditionAgent extends BaseAgent {\n    def generateCandidate(inputExpr) {\n        def result = inputExpr[0] + inputExpr[1]\n        return [candidate: result, metadata: metadata()]\n    }\n}"
      }
    ],
    "metadata": {
      "version": "1.0",
      "created": "2025-02-27TXX:XX:XXZ",
      "description": "Complete Math KG incorporating basic arithmetic, algebra, calculus, trigonometric functions, symbolic manipulation, and advanced number theory operations to win IMO-level challenges."
    }
  }
}
